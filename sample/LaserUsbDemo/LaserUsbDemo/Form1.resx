<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="serialPort1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        1v9uUosW/wO75VMZjRDJigAAAABJRU5ErkJggg==
</value>
  </data>
</root>